App.room = App.cable.subscriptions.create("RoomChannel", {
  connected: function() {
    //Called when the subscription is ready for use on the server
  },
  disconnected: function() {
    //Called when the subscription has been terminated by the server
  },
  received: function(data) {
    //Called when there's incoming data on the websocket for this channel
    if (data['message']) {
      $('[data-room="' + data['user'] + '"]').append(data['message']);
    } else if (data['name']) {
      $('.online-user').append('<p data-user="' + data['user'] + '">' + data['name'] + '</p>');
    }
  },
  speak: function(message, user) {
    // $('.message-content').data("info", user);
    this.perform('speak', {message: message, user: user});
  },
  start: function(user) {
    this.perform('start', {user: user});
  }
});

$(document).on("turbolinks:load", function() {
  $(document).on('keypress', '[data-behavior~=room_speaker]', function(event) {
    if (event.keyCode === 13) {
      var user = $(".start-connect + .message").data();
      App.room.speak(event.target.value, user);
      event.target.value = '';
      event.preventDefault();
    }
  });

  $(document).on('click', '[data-behavior~=room_speaker]', function(event) {
    App.room.speak(event.target.value);
    event.target.value = '';
    event.preventDefault();
  });

  $(".start-connect").on('click', function(event) {
    var user = $(".start-connect + .message").data();
    $(".start-connect").hide();
    $(".message").show();
    App.room.start(user.room);
  });

  $(document).on('click', ".glyphicon-ok", function() {
    var data = $(this).data("info");
    $(".message-content").data("room", data);
    var next = $(".message-content").attr("data-room", data);
  });

});
